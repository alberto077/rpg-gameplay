/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rpggameplay;
import games.spell.ActionInterfaceForm;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import java.util.Random;
/**
 *
 * @author administrator
 */
public class GamePlay extends javax.swing.JFrame {

    /**
     * Creates new form GamePlay
     */
    

    private int playerPosX;
    private int playerPosY;
    private int enemyPosX;
    private int enemyPosY;
    
    
    
    private Map<String, Integer> playerStats;
    private Map<String,Integer> enemyStats;
    private Random random = new Random();
    
    
    
    public GamePlay() {
        initComponents();
        initGamingEnvironment();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        StartGameButton = new javax.swing.JButton();
        moveUpButton = new javax.swing.JButton();
        moveDownButton = new javax.swing.JButton();
        moveLeftButton = new javax.swing.JButton();
        moveRightButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        GameOutputTextPane = new javax.swing.JTextPane();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(600, 600));
        setName("RPG Game Environment"); // NOI18N

        jLabel1.setText("Welcome to the CS 397 Fall 2025 OOP RPG Game");

        jLabel2.setText("Close this window to end the game.");

        StartGameButton.setText("Start Game");
        StartGameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartGameButtonActionPerformed(evt);
            }
        });

        moveUpButton.setText("Up");
        moveUpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveUpButtonActionPerformed(evt);
            }
        });

        moveDownButton.setText("Down");
        moveDownButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveDownButtonActionPerformed(evt);
            }
        });

        moveLeftButton.setText("Left");
        moveLeftButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveLeftButtonActionPerformed(evt);
            }
        });

        moveRightButton.setText("Right");
        moveRightButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveRightButtonActionPerformed(evt);
            }
        });

        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("Courier 10 Pitch", 0, 15)); // NOI18N
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        jScrollPane3.setViewportView(GameOutputTextPane);

        jLabel3.setText("Game Output");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 105, Short.MAX_VALUE)
                                .addComponent(StartGameButton)))
                        .addGap(57, 57, 57))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(99, 99, 99)
                                .addComponent(moveUpButton)
                                .addGap(94, 94, 94))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(moveLeftButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(moveRightButton)
                                        .addContainerGap())
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(moveDownButton)
                                        .addGap(80, 80, 80))))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(StartGameButton))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(moveUpButton)
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(moveLeftButton)
                            .addComponent(moveRightButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(moveDownButton)
                        .addGap(78, 78, 78)))
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void initGamingEnvironment() {
         playerStats = new HashMap<>();
         
         playerStats.put("HP", 100);
         playerStats.put("MP",50);
         playerStats.put("Strength", 10);
         playerStats.put("Endurance", 10);
         playerStats.put("Dexterity", 10);
         playerStats.put("Intelligence", 10);
         
         
    }
    
    public void actionLog(String currAction){
        String previous = GameOutputTextPane.getText();
        GameOutputTextPane.setText(previous + "\n\n" + currAction);
    }
    private void startSpellBattle(){
        // pass both stats and the update logger in this format ::log to match the consumer function
        // actionLog takes one string and returns nothing so it will look just like cosnsumer
        // When we use the consumer function in spell battle it runs with the action log function here in the parent
        // We cant just pass the function itself because then it will just update locally inspell battle so we need this method refrence operator so the consumer function knows where to point to to execute
        ActionInterfaceForm spellBattleGUI = new ActionInterfaceForm(playerStats, enemyStats, this::actionLog);
        spellBattleGUI.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        spellBattleGUI.addWindowListener(new java.awt.event.WindowAdapter(){
            @Override
            public void windowClosed(java.awt.event.WindowEvent closed){
                if (playerStats.get("HP") <= 0){
                    actionLog("You have Lost the battle");
                    

                }else if (enemyStats.get("HP") <= 0){
                    actionLog("You have Won the battle");
                    setEnemySpawn();

                }
                
            }
        });
        spellBattleGUI.setVisible(true);
    }
    
    private void returnToGame(){
        int runCost = 3;
        int currMP = playerStats.get("MP");
        
        playerStats.put("MP", currMP - runCost);
        playerPosX ++;
        playerPosY ++;
        
        actionLog("You have fled from the enemy costing some of your mana\n you are now at Position" + playerPosX + ":" + playerPosY);
        
        
    }
    private void playerBattleOption(){
        Object[] options = { "SPELL BATTLE", "RUN" };
        int choice = JOptionPane.showOptionDialog(this, "You have encountered an enemy what will you do?", "Battle Select",JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
        
        if (choice == 0){
            actionLog("Starting Spell Battle");
            startSpellBattle();
        }else {
            actionLog("Returning to Game");
            returnToGame();
        }
        
    }
    private void checkForEnemy() {
        if (playerPosX == enemyPosX && playerPosY == enemyPosY){
            actionLog("Enemy Encountered");
            int ehp = enemyStats.get("HP");
            int estr = enemyStats.get("Strength");
            actionLog("Enemy Stats:\nHealth:"+ ehp +"\nStrength:" + estr );
            playerBattleOption();
        }
    }
    private void setEnemySpawn(){
        int posX = 1 + random.nextInt(10);
        int posY = 1 + random.nextInt(10);
        
        enemyPosX = posX;
        enemyPosY = posY;
        enemyStats = new HashMap<>();
         
        //Sets enemy health between 30-50
        int enemyHP = 30 + random.nextInt(21);
        //Sets enemy Attack between 5 and 20
        int enemyStr = 5 + random.nextInt(16);

        enemyStats.put("HP", enemyHP);
        enemyStats.put("Strength", enemyStr);
        actionLog("Enemy has spawned at position X: " +enemyPosX+ " Y: " +enemyPosY);
    }
    private void StartGameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartGameButtonActionPerformed
        // TODO add your handling code here:
        String preamble = "RPG Game Started";
        GameOutputTextPane.setText(preamble);       
        playerPosX = 0;
        playerPosY = 0;
        setEnemySpawn();
        
        
        // enable buttons to be functional maybe spwan the enemy somewhere random
     
        
        
    }//GEN-LAST:event_StartGameButtonActionPerformed

    private void moveUpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveUpButtonActionPerformed
        // TODO add your handling code here:
        playerPosY ++;
        actionLog("Player Position: X:" +playerPosX+ "Y:" +playerPosY);
        checkForEnemy();
    }//GEN-LAST:event_moveUpButtonActionPerformed

    private void moveDownButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveDownButtonActionPerformed
        // TODO add your handling code here:
        playerPosY --;
        actionLog("Player Position: X: " +playerPosX+ " Y: " +playerPosY);
        checkForEnemy();
    }//GEN-LAST:event_moveDownButtonActionPerformed

    private void moveLeftButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveLeftButtonActionPerformed
        // TODO add your handling code here:
        playerPosX --;
        actionLog("Player Position: X: " +playerPosX+ " Y: " +playerPosY);
        checkForEnemy();
    }//GEN-LAST:event_moveLeftButtonActionPerformed

    private void moveRightButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveRightButtonActionPerformed
        // TODO add your handling code here:
        playerPosX ++;
        actionLog("Player Position: X: " +playerPosX+ " Y: " +playerPosY);
        checkForEnemy();
    }//GEN-LAST:event_moveRightButtonActionPerformed
    
    
//    private void runGame() {
//        
//         String priorOutput = new String();
//         priorOutput = GameOutputTextPane.getText();
//         String updatedOutput = new String();
//         updatedOutput = priorOutput + "\n\n" + actionOutput;
//         GameOutputTextPane.setText(updatedOutput);
//         
//         
//    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GamePlay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GamePlay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GamePlay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GamePlay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GamePlay().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextPane GameOutputTextPane;
    private javax.swing.JButton StartGameButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JButton moveDownButton;
    private javax.swing.JButton moveLeftButton;
    private javax.swing.JButton moveRightButton;
    private javax.swing.JButton moveUpButton;
    // End of variables declaration//GEN-END:variables
    
}
